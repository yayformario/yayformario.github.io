/*****************
Author: Mario Huerta
Date: April 8th, 2025

TODO:
Light academia coloring for light mode

Disclaimer:
I try my best to organize things with a top/bottom approach
Also like to organize things as:
- Colors
- Padding
- Text
*****************/

/*****************
Basic rules after resetting styles
*****************/
/* Reset styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  
}

/* Dark Academia coloring by default*/
:root {
  --background: #2d3f36;
  --foreground: #F5DEB3;
}

header {
  background: #81583c;
  color: var(--foreground);

  padding: 1rem;
  text-align: center;
}

/* Hide any overflow for navigation bar*/
.topnav{
  background: #81583c;
  color: var(--foreground);
  
  display: flex;
  justify-content: center;
  overflow: hidden;
}

/* Style the links inside the navigation bar*/
.topnav a{
  color: var(--foreground);
  
  padding: 14px 16px;
  text-decoration: none;
  font-size: 17px;
}

/*Change color of links on hover*/
nav a:hover {
  color: #6B2D2C;
}

/*Add color to the active/ current link*/
.topnav a.active {
  color: hsl(47, 100%, 63%);
}



body{
  background: var(--background);
  color: var(--foreground);

  font-family: 'Times New Roman', sans-serif;
  line-height: 1.6;
  
}

main {
  max-width: 1200px;
  margin: 2rem auto;
  padding: 0 1rem;
}

footer{
  background: #1d2631;

  text-align: center;
  padding: 1rem;
  /*position: fixed;*/
  bottom: 0;
  width: 100%;
}

/*****************
Specific css for a 'sticky footer' on the bottom of the page
- stretch the whole body the full height of the screen
- stack the elements vertically (header, nav, main, footer)
- let <main> grow to fill all the leftover vertical space between header/nav and footer
*****************/

/*
By default: <html> and <body> only grow as tall as their content
  - height: 100% ensures that they stretch to fill the full viewport height
  - helps create a 'floor' for the footer to sit on
*/
html, body { 
  height: 100%;
}

/*
<body> by default is a block container
  - converting it into a flex container for flex layout algo
  - allows control of direction, spacing, growth, and alignment of children

flex-direction: column
  - makes children stack vertically (top to bottom)  
*/
body {
  display: flex;
  flex-direction: column;
}

main {
  flex: 1;
}
/*****************
Mobile stuff 
*****************/
@media (max-width: 768px) {
  /*Center top navigation and let them wrap*/
  .topnav {
    flex-wrap: wrap;
  } 
}


/**** 
-----
TODO: Light Academia coloring 
-------

@media (prefers-color-scheme: light) {
  :root {
    --background: #717d5a;
    --foreground: #f5e5c3;
  }
  
  header {
    background: #b99972;
    color: var(--foreground);
  }

  .topnav{
    color: #2c2323;
  }
  
  .topnav a{
    color: #050303;
  }
  
  nav a:hover {
    color: #6B2D2C;
  }

  body{
    background: var(--background);
    color: var(--foreground);
  }


  footer{
    background: #384a62;
    color: #e1d9c9;
  }
}

****/
